function DepGen() %<<<1
        % only for testing:
        inDir = 'test_functions/';
        Specials = {''};
        GraphName = 'test_functions';

        % check and format inputs
        inDir = EnsureProperDirFormat(inDir);
        Specials = Specials(:)';

        % search all .m files in input directory and subdirectories:
        mFiles = getAllFiles(inDir, '.*.m$');
        % add all found files as specials, so they will be found even if called without parentheses:
        [tmp1 tmp2 tmp3] = cellfun(@fileparts, mFiles, 'UniformOutput', 0);
        Specials = [Specials; tmp2];
        % remove empty cells
        Specials = Specials(not(cellfun('isempty', Specials)));

        [Functions Nodes] = cellfun(@getAllFunDefsAndCalls, mFiles, {Specials}, 'UniformOutput', 0);

        % print all dependencies into a .dot file
        % make graph node lines:
        GraphLines = {};
        for i = 1:length(Nodes)
                Node = Nodes{i};
                for i = 1:length(Node)
                        GraphLines{end+1} = sprintf('"%s" -> "%s";', Node(i).Parent.ID, Node(i).Call);
                endfor
        endfor
        % deduplicate:
        GraphLines = unique(GraphLines);
        % make graph itself
        Graph = '/* Generated by newdep */'; %XXX upravit
        Graph = [Graph "\ndigraph dep {\nnode [shape = box];"];
        for i = 1:length(GraphLines)
                Graph = [Graph "\n" GraphLines{i}];
        endfor
        Graph = [Graph "\n}"];

        fid = fopen ([GraphName '.dot'],'w');
        fprintf(fid, Graph);
        fclose(fid);

        % call graph generation
        [STATUS, OUTPUT] = system(['dot -Tpdf "' GraphName '.dot" -o "' GraphName '.pdf"']);
        if STATUS
                error(["GraphViz failed. Output was:\n" OUTPUT])
        else
                disp("Done")
        endif

endfunction

% maybe this is not needed if only fullfile is used to concatenate everything
% ensure the directory string ends with file separator
function Dir = EnsureProperDirFormat(Dir)
        if not(strcmp(Dir(end), filesep))
                Dir = [Dir filesep];
        endif
endfunction

% vim modeline: vim: foldmarker=%<<<,%>>> fdm=marker fen ft=octave textwidth=1000
